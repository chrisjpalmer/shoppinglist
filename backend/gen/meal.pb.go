// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: meal.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Meal struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IngredientRefs []*IngredientRef       `protobuf:"bytes,3,rep,name=ingredient_refs,json=ingredientRefs,proto3" json:"ingredient_refs,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Meal) Reset() {
	*x = Meal{}
	mi := &file_meal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Meal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meal) ProtoMessage() {}

func (x *Meal) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meal.ProtoReflect.Descriptor instead.
func (*Meal) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{0}
}

func (x *Meal) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Meal) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Meal) GetIngredientRefs() []*IngredientRef {
	if x != nil {
		return x.IngredientRefs
	}
	return nil
}

type IngredientRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IngredientId  int32                  `protobuf:"varint,1,opt,name=ingredient_id,json=ingredientId,proto3" json:"ingredient_id,omitempty"`
	Number        int32                  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngredientRef) Reset() {
	*x = IngredientRef{}
	mi := &file_meal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngredientRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngredientRef) ProtoMessage() {}

func (x *IngredientRef) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngredientRef.ProtoReflect.Descriptor instead.
func (*IngredientRef) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{1}
}

func (x *IngredientRef) GetIngredientId() int32 {
	if x != nil {
		return x.IngredientId
	}
	return 0
}

func (x *IngredientRef) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

var File_meal_proto protoreflect.FileDescriptor

const file_meal_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"meal.proto\"c\n" +
	"\x04Meal\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x127\n" +
	"\x0fingredient_refs\x18\x03 \x03(\v2\x0e.IngredientRefR\x0eingredientRefs\"L\n" +
	"\rIngredientRef\x12#\n" +
	"\ringredient_id\x18\x01 \x01(\x05R\fingredientId\x12\x16\n" +
	"\x06number\x18\x02 \x01(\x05R\x06numberB?B\tMealProtoP\x01Z0github.com/chrisjpalmer/shoppinglist/backend/genb\x06proto3"

var (
	file_meal_proto_rawDescOnce sync.Once
	file_meal_proto_rawDescData []byte
)

func file_meal_proto_rawDescGZIP() []byte {
	file_meal_proto_rawDescOnce.Do(func() {
		file_meal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meal_proto_rawDesc), len(file_meal_proto_rawDesc)))
	})
	return file_meal_proto_rawDescData
}

var file_meal_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_meal_proto_goTypes = []any{
	(*Meal)(nil),          // 0: Meal
	(*IngredientRef)(nil), // 1: IngredientRef
}
var file_meal_proto_depIdxs = []int32{
	1, // 0: Meal.ingredient_refs:type_name -> IngredientRef
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_meal_proto_init() }
func file_meal_proto_init() {
	if File_meal_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meal_proto_rawDesc), len(file_meal_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meal_proto_goTypes,
		DependencyIndexes: file_meal_proto_depIdxs,
		MessageInfos:      file_meal_proto_msgTypes,
	}.Build()
	File_meal_proto = out.File
	file_meal_proto_goTypes = nil
	file_meal_proto_depIdxs = nil
}
