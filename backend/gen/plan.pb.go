// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: plan.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Category int32

const (
	Category_CATEGORY_LUNCH  Category = 0
	Category_CATEGORY_DINNER Category = 1
	Category_CATEGORY_SNACK  Category = 2
)

// Enum value maps for Category.
var (
	Category_name = map[int32]string{
		0: "CATEGORY_LUNCH",
		1: "CATEGORY_DINNER",
		2: "CATEGORY_SNACK",
	}
	Category_value = map[string]int32{
		"CATEGORY_LUNCH":  0,
		"CATEGORY_DINNER": 1,
		"CATEGORY_SNACK":  2,
	}
)

func (x Category) Enum() *Category {
	p := new(Category)
	*p = x
	return p
}

func (x Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Category) Descriptor() protoreflect.EnumDescriptor {
	return file_plan_proto_enumTypes[0].Descriptor()
}

func (Category) Type() protoreflect.EnumType {
	return &file_plan_proto_enumTypes[0]
}

func (x Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Category.Descriptor instead.
func (Category) EnumDescriptor() ([]byte, []int) {
	return file_plan_proto_rawDescGZIP(), []int{0}
}

type Plan struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Days          []*Day                 `protobuf:"bytes,1,rep,name=days,proto3" json:"days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Plan) Reset() {
	*x = Plan{}
	mi := &file_plan_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_plan_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_plan_proto_rawDescGZIP(), []int{0}
}

func (x *Plan) GetDays() []*Day {
	if x != nil {
		return x.Days
	}
	return nil
}

type Day struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryMeals []*CategoryMeal        `protobuf:"bytes,1,rep,name=category_meals,json=categoryMeals,proto3" json:"category_meals,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Day) Reset() {
	*x = Day{}
	mi := &file_plan_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Day) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Day) ProtoMessage() {}

func (x *Day) ProtoReflect() protoreflect.Message {
	mi := &file_plan_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Day.ProtoReflect.Descriptor instead.
func (*Day) Descriptor() ([]byte, []int) {
	return file_plan_proto_rawDescGZIP(), []int{1}
}

func (x *Day) GetCategoryMeals() []*CategoryMeal {
	if x != nil {
		return x.CategoryMeals
	}
	return nil
}

type CategoryMeal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      Category               `protobuf:"varint,1,opt,name=category,proto3,enum=Category" json:"category,omitempty"`
	MealId        int64                  `protobuf:"varint,2,opt,name=meal_id,json=mealId,proto3" json:"meal_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CategoryMeal) Reset() {
	*x = CategoryMeal{}
	mi := &file_plan_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategoryMeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryMeal) ProtoMessage() {}

func (x *CategoryMeal) ProtoReflect() protoreflect.Message {
	mi := &file_plan_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryMeal.ProtoReflect.Descriptor instead.
func (*CategoryMeal) Descriptor() ([]byte, []int) {
	return file_plan_proto_rawDescGZIP(), []int{2}
}

func (x *CategoryMeal) GetCategory() Category {
	if x != nil {
		return x.Category
	}
	return Category_CATEGORY_LUNCH
}

func (x *CategoryMeal) GetMealId() int64 {
	if x != nil {
		return x.MealId
	}
	return 0
}

type PlanSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IngredientRef []*IngredientRef       `protobuf:"bytes,1,rep,name=ingredient_ref,json=ingredientRef,proto3" json:"ingredient_ref,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlanSummary) Reset() {
	*x = PlanSummary{}
	mi := &file_plan_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanSummary) ProtoMessage() {}

func (x *PlanSummary) ProtoReflect() protoreflect.Message {
	mi := &file_plan_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanSummary.ProtoReflect.Descriptor instead.
func (*PlanSummary) Descriptor() ([]byte, []int) {
	return file_plan_proto_rawDescGZIP(), []int{3}
}

func (x *PlanSummary) GetIngredientRef() []*IngredientRef {
	if x != nil {
		return x.IngredientRef
	}
	return nil
}

var File_plan_proto protoreflect.FileDescriptor

const file_plan_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"plan.proto\x1a\n" +
	"meal.proto\" \n" +
	"\x04Plan\x12\x18\n" +
	"\x04days\x18\x01 \x03(\v2\x04.DayR\x04days\";\n" +
	"\x03Day\x124\n" +
	"\x0ecategory_meals\x18\x01 \x03(\v2\r.CategoryMealR\rcategoryMeals\"N\n" +
	"\fCategoryMeal\x12%\n" +
	"\bcategory\x18\x01 \x01(\x0e2\t.CategoryR\bcategory\x12\x17\n" +
	"\ameal_id\x18\x02 \x01(\x03R\x06mealId\"D\n" +
	"\vPlanSummary\x125\n" +
	"\x0eingredient_ref\x18\x01 \x03(\v2\x0e.IngredientRefR\ringredientRef*G\n" +
	"\bCategory\x12\x12\n" +
	"\x0eCATEGORY_LUNCH\x10\x00\x12\x13\n" +
	"\x0fCATEGORY_DINNER\x10\x01\x12\x12\n" +
	"\x0eCATEGORY_SNACK\x10\x02B?B\tPlanProtoP\x01Z0github.com/chrisjpalmer/shoppinglist/backend/genb\x06proto3"

var (
	file_plan_proto_rawDescOnce sync.Once
	file_plan_proto_rawDescData []byte
)

func file_plan_proto_rawDescGZIP() []byte {
	file_plan_proto_rawDescOnce.Do(func() {
		file_plan_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plan_proto_rawDesc), len(file_plan_proto_rawDesc)))
	})
	return file_plan_proto_rawDescData
}

var file_plan_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_plan_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_plan_proto_goTypes = []any{
	(Category)(0),         // 0: Category
	(*Plan)(nil),          // 1: Plan
	(*Day)(nil),           // 2: Day
	(*CategoryMeal)(nil),  // 3: CategoryMeal
	(*PlanSummary)(nil),   // 4: PlanSummary
	(*IngredientRef)(nil), // 5: IngredientRef
}
var file_plan_proto_depIdxs = []int32{
	2, // 0: Plan.days:type_name -> Day
	3, // 1: Day.category_meals:type_name -> CategoryMeal
	0, // 2: CategoryMeal.category:type_name -> Category
	5, // 3: PlanSummary.ingredient_ref:type_name -> IngredientRef
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_plan_proto_init() }
func file_plan_proto_init() {
	if File_plan_proto != nil {
		return
	}
	file_meal_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plan_proto_rawDesc), len(file_plan_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plan_proto_goTypes,
		DependencyIndexes: file_plan_proto_depIdxs,
		EnumInfos:         file_plan_proto_enumTypes,
		MessageInfos:      file_plan_proto_msgTypes,
	}.Build()
	File_plan_proto = out.File
	file_plan_proto_goTypes = nil
	file_plan_proto_depIdxs = nil
}
