// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: echo.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlanRequest) Reset() {
	*x = GetPlanRequest{}
	mi := &file_echo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanRequest) ProtoMessage() {}

func (x *GetPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_echo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanRequest.ProtoReflect.Descriptor instead.
func (*GetPlanRequest) Descriptor() ([]byte, []int) {
	return file_echo_proto_rawDescGZIP(), []int{0}
}

type GetPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plan          *Plan                  `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlanResponse) Reset() {
	*x = GetPlanResponse{}
	mi := &file_echo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanResponse) ProtoMessage() {}

func (x *GetPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_echo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanResponse.ProtoReflect.Descriptor instead.
func (*GetPlanResponse) Descriptor() ([]byte, []int) {
	return file_echo_proto_rawDescGZIP(), []int{1}
}

func (x *GetPlanResponse) GetPlan() *Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type Plan struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Days          []*Day                 `protobuf:"bytes,1,rep,name=days,proto3" json:"days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Plan) Reset() {
	*x = Plan{}
	mi := &file_echo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_echo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_echo_proto_rawDescGZIP(), []int{2}
}

func (x *Plan) GetDays() []*Day {
	if x != nil {
		return x.Days
	}
	return nil
}

type Day struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryMeals []*CategoryMeal        `protobuf:"bytes,1,rep,name=category_meals,json=categoryMeals,proto3" json:"category_meals,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Day) Reset() {
	*x = Day{}
	mi := &file_echo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Day) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Day) ProtoMessage() {}

func (x *Day) ProtoReflect() protoreflect.Message {
	mi := &file_echo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Day.ProtoReflect.Descriptor instead.
func (*Day) Descriptor() ([]byte, []int) {
	return file_echo_proto_rawDescGZIP(), []int{3}
}

func (x *Day) GetCategoryMeals() []*CategoryMeal {
	if x != nil {
		return x.CategoryMeals
	}
	return nil
}

type CategoryMeal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryId    int32                  `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	MealId        int32                  `protobuf:"varint,2,opt,name=meal_id,json=mealId,proto3" json:"meal_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CategoryMeal) Reset() {
	*x = CategoryMeal{}
	mi := &file_echo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategoryMeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryMeal) ProtoMessage() {}

func (x *CategoryMeal) ProtoReflect() protoreflect.Message {
	mi := &file_echo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryMeal.ProtoReflect.Descriptor instead.
func (*CategoryMeal) Descriptor() ([]byte, []int) {
	return file_echo_proto_rawDescGZIP(), []int{4}
}

func (x *CategoryMeal) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *CategoryMeal) GetMealId() int32 {
	if x != nil {
		return x.MealId
	}
	return 0
}

var File_echo_proto protoreflect.FileDescriptor

const file_echo_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"echo.proto\"\x10\n" +
	"\x0eGetPlanRequest\",\n" +
	"\x0fGetPlanResponse\x12\x19\n" +
	"\x04plan\x18\x01 \x01(\v2\x05.PlanR\x04plan\" \n" +
	"\x04Plan\x12\x18\n" +
	"\x04days\x18\x01 \x03(\v2\x04.DayR\x04days\";\n" +
	"\x03Day\x124\n" +
	"\x0ecategory_meals\x18\x01 \x03(\v2\r.CategoryMealR\rcategoryMeals\"H\n" +
	"\fCategoryMeal\x12\x1f\n" +
	"\vcategory_id\x18\x01 \x01(\x05R\n" +
	"categoryId\x12\x17\n" +
	"\ameal_id\x18\x02 \x01(\x05R\x06mealId2C\n" +
	"\x13ShoppingListService\x12,\n" +
	"\aGetPlan\x12\x0f.GetPlanRequest\x1a\x10.GetPlanResponseB?B\tEchoProtoP\x01Z0github.com/chrisjpalmer/shoppinglist/backend/genb\x06proto3"

var (
	file_echo_proto_rawDescOnce sync.Once
	file_echo_proto_rawDescData []byte
)

func file_echo_proto_rawDescGZIP() []byte {
	file_echo_proto_rawDescOnce.Do(func() {
		file_echo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_echo_proto_rawDesc), len(file_echo_proto_rawDesc)))
	})
	return file_echo_proto_rawDescData
}

var file_echo_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_echo_proto_goTypes = []any{
	(*GetPlanRequest)(nil),  // 0: GetPlanRequest
	(*GetPlanResponse)(nil), // 1: GetPlanResponse
	(*Plan)(nil),            // 2: Plan
	(*Day)(nil),             // 3: Day
	(*CategoryMeal)(nil),    // 4: CategoryMeal
}
var file_echo_proto_depIdxs = []int32{
	2, // 0: GetPlanResponse.plan:type_name -> Plan
	3, // 1: Plan.days:type_name -> Day
	4, // 2: Day.category_meals:type_name -> CategoryMeal
	0, // 3: ShoppingListService.GetPlan:input_type -> GetPlanRequest
	1, // 4: ShoppingListService.GetPlan:output_type -> GetPlanResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_echo_proto_init() }
func file_echo_proto_init() {
	if File_echo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_echo_proto_rawDesc), len(file_echo_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_echo_proto_goTypes,
		DependencyIndexes: file_echo_proto_depIdxs,
		MessageInfos:      file_echo_proto_msgTypes,
	}.Build()
	File_echo_proto = out.File
	file_echo_proto_goTypes = nil
	file_echo_proto_depIdxs = nil
}
