syntax = "proto3";

import "plan.proto";
import "meal.proto";
import "ingredient.proto";

// plan

message GetCurrentPlanRequest {

}

message GetCurrentPlanResponse {
  int64 plan_id = 1;
}

message GetPlanRequest {
  int64 plan_id = 1;
}

message GetPlanResponse {
  Plan plan = 1;
  PlanSummary plan_summary = 2;
}

message UpdatePlanRequest {
  int64 plan_id = 1;
  Plan plan = 2;
}

message UpdatePlanResponse {

}

message MarkPlanAsCurrentRequest {
  int64 plan_id = 1;
}

message MarkPlanAsCurrentResponse {

}

// meals

message GetMealsRequest {

}

message GetMealsResponse {
  repeated Meal meals = 1;
}

message CreateMealRequest {
  Meal meal = 1;
}

message CreateMealResponse {
  int64 meal_id = 1;
}

message UpdateMealRequest {
  Meal meal = 1;
}

message UpdateMealResponse {
  
}

message DeleteMealRequest {
  int64 meal_id = 1;
}

message DeleteMealResponse {

}

// ingredients

message GetIngredientsRequest {

}

message GetIngredientsResponse {
  repeated Ingredient ingredients = 1;
}

message CreateIngredientRequest {
  Ingredient ingredient = 1;
}

message CreateIngredientResponse {
  int64 ingredient_id = 1;
}

message UpdateIngredientRequest {
  Ingredient ingredient = 1;
}

message UpdateIngredientResponse {
  
}

message DeleteIngredientRequest {
  int64 ingredient_id = 1;
}

message DeleteIngredientResponse {

}

// service

service ShoppingListService {
  // plan
  rpc GetCurrentPlan(GetCurrentPlanRequest) returns (GetCurrentPlanResponse);
  rpc GetPlan(GetPlanRequest) returns (GetPlanResponse);
  rpc UpdatePlan(UpdatePlanRequest) returns (UpdatePlanResponse);
  rpc MarkPlanAsCurrent(MarkPlanAsCurrentRequest) returns (MarkPlanAsCurrentResponse);

  // meals
  rpc GetMeals(GetMealsRequest) returns (GetMealsResponse);
  rpc CreateMeal(CreateMealRequest) returns (CreateMealResponse);
  rpc UpdateMeal(UpdateMealRequest) returns (UpdateMealResponse);
  rpc DeleteMeal(DeleteMealRequest) returns (DeleteMealResponse);

  // ingredients

  rpc GetIngredients(GetIngredientsRequest) returns (GetIngredientsResponse);
  rpc CreateIngredient(CreateIngredientRequest) returns (CreateIngredientResponse);
  rpc UpdateIngredient(UpdateIngredientRequest) returns (UpdateIngredientResponse);
  rpc DeleteIngredient(DeleteIngredientRequest) returns (DeleteIngredientResponse);
}